/* Enter a unique ExecutionPlan */
@Plan:name('PoSExecutionPlan')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */

@Import('iot.per.device.stream.carbon.super.mobile_client:1.0.0')
define stream mobileInput (meta_deviceId string, items string, pos_id string, user string);

@Import('iot.per.device.stream.carbon.super.pos_device:1.0.0')
define stream posInput (meta_deviceId string, mobile_id string, bill_id string, sub_total double, tax double, bill_total double);

@Export('org.wso2.iot.operation:1.0.0')
define stream operations (meta_deviceIdentifiers string, meta_deviceType string, code string, type string, isEnabled bool, payLoad string);

from mobileInput[device:isEnrolled(pos_id, "pos_device")]
select json:getArray(pos_id) as meta_deviceIdentifiers, "pos_device" as meta_deviceType, "checkout_request" as code, "PROFILE" as type, true as isEnabled, str:concat("{'mobile_id':'", meta_deviceId, "','items':'", items, "','user':'", user, "'}") as payLoad
insert into operations;

from posInput[device:isEnrolled(mobile_id, "mobile_client")]
select json:getArray(mobile_id) as meta_deviceIdentifiers, "mobile_client" as meta_deviceType, "checkout_response" as code, "PROFILE" as type, true as isEnabled, str:concat("{'pos_id':'", meta_deviceId, "','bill_id':'", bill_id, "','sub_total':'", sub_total, "','tax':'", tax, "','bill_total':'", bill_total, "'}") as payLoad
insert into operations;

